@init
function lerp(a, b, t) (a + (b - a)*t;);
function all_pass(cutoff, q)
instance(ic1eq, ic2eq, a1, a2, a3, m0, m1, m2)
(
  g = tan($pi*cutoff/srate);
  k = 1/q;
  a1 = 1/(1+ g*(g+k));
  a2 = g*a1;
  a3 = g*a2;   
  m0 = 1;
  m1 = -2*k;
  m2 = 0; 
);
function low_pass(cutoff, q)
instance(ic1eq, ic2eq, a1, a2, a3, m0, m1, m2, cutoff)
(
  cutoff = cutoff;
  g = tan($pi*cutoff/srate);
  k = 1/q;
  a1 = 1/(1+ g*(g+k));
  a2 = g*a1;
  a3 = g*a2;
  m0 = 0;
  m1 = 0;
  m2 = 1;
);
function high_pass(cutoff, q)
instance(ic1eq, ic2eq, a1, a2, a3, m0, m1, m2, cutoff, g)
(
  g = tan($pi*cutoff/srate);
  k = 1/q;
  a1 = 1/(1+ g*(g+k));
  a2 = g*a1;
  a3 = g*a2;
  m0 = 1;
  m1 = -k;
  m2 = -1;
);
function tick(sp)
instance(ic1eq, ic2eq, a1, a2, a3, m0, m1, m2) local(v1, v2, v3, out)
(
  v3 = sp - ic2eq;
  v1 = a1*ic1eq + a2*v3;
  v2 = ic2eq + a2*ic1eq + a3* v3;
  ic1eq = 2*v1 - ic1eq;
  ic2eq = 2*v2 - ic2eq;
  out = m0*sp + m1*v1 + m2*v2;
  out;
);
function crossfade_f(t) 
(
  t = lerp(-1, 1, t);
  sqrt(0.5*(1-t));
);
function crossfade_b(t) 
(
  t = lerp(-1, 1, t);
  sqrt(0.5*(1+t));
);
sc = 20/log(10); tau = 2*$pi;
function val2db(spx) (log(spx)*sc;);
function db2val(db) (10^(db * 0.05););

function tri_lfo()
(
  this.out = 0;
);
function tri_lfo_tick(f)
instance(out)
(
  out += (1/srate)*f;
  out >= 1 ? (out -= 1;);
);
function tri_lfo_get()
instance(out)
(
  abs(out - 0.5)*2;
);

function sin_lfo()
(
  this.out = 0;
);
function sin_lfo_tick(f)
instance(out)
(
  out += (2*$pi/srate)*f;
  out >= 2*$pi ? (out -= 2*$pi;);
  sin(out);
);
function sin_lfo_get()
instance(out)
(
  sin(out);
);
